name: Hosted Zones
run-name: ${{ github.event.inputs.Action }} Hosted Zones Infrastructure
on:
  workflow_dispatch:
    inputs:
      Action:
        type: choice
        description: which action ?
        options:
          - plan
          - apply
          - destroy
      target_module:
        description: 'Enter target modules'
        required: false
        default: ''
      continue:
        type: choice
        description: "Continue applying Opentofu for the rest of the module in case there is target modules"
        required: false
        options:
          - "true"
          - "false"
        default: "false"

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: write    # This is required for actions/checkout

env:        
  TARGET_MODULE: ${{ github.event.inputs.target_module }}
jobs:
  Terraform_Workflow:
    runs-on: arc-scale-set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: configure Lower aws credentials
        id: Lower_creds
        uses: VFGroup-VBIT/vbitdc-opf-actions/aws/install-cli-action@main
        with:
          role-to-assume: arn:aws:iam::${{ vars.LOWER_AWS_ACCOUNT_ID }}:role/Github-Runners-Access
          role-session-name: GitHub_to_AWS_via_FederatedOIDC_Run_ID_${{ github.run_id }}
          aws-region: ${{ vars.REGION }}

      - name: configure Higher aws credentials
        id: Higher_creds
        uses: VFGroup-VBIT/vbitdc-opf-actions/aws/install-cli-action@main
        with:
          role-to-assume: arn:aws:iam::${{ vars.HIGHER_AWS_ACCOUNT_ID }}:role/Github-Runners-Access
          role-session-name: GitHub_to_AWS_via_FederatedOIDC_Run_ID_${{ github.run_id }}
          aws-region: ${{ vars.REGION }}

      - name: Restor Terraform modules
        uses: actions/cache@v4
        with:
          path: '**/.terraform'
          key: ${{ runner.os }}-${{ hashFiles('**/terraform.lock') }}

      - id: private-modules
        uses: VFGroup-VBIT/vbitdc-opf-actions/private-modules@main
        with:
          org: VFGroup-VBIT
          token: ${{ secrets.TOKEN }}

      - name: Create aws profile
        run: |
          mkdir ~/.aws
          echo "[Lower]" > ~/.aws/credentials
          echo "aws_access_key_id        = ${{ steps.Lower_creds.outputs.aws-access-key-id }}" >> ~/.aws/credentials
          echo "aws_secret_access_key    = ${{ steps.Lower_creds.outputs.aws-secret-access-key }}" >> ~/.aws/credentials
          echo "aws_session_token        = ${{ steps.Lower_creds.outputs.aws-session-token }}" >> ~/.aws/credentials
          echo "[Higher]" >> ~/.aws/credentials
          echo "aws_access_key_id        = ${{ steps.Higher_creds.outputs.aws-access-key-id }}" >> ~/.aws/credentials
          echo "aws_secret_access_key    = ${{ steps.Higher_creds.outputs.aws-secret-access-key }}" >> ~/.aws/credentials
          echo "aws_session_token        = ${{ steps.Higher_creds.outputs.aws-session-token }}" >> ~/.aws/credentials


      - name: OpenTofu Init
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/install-cli-and-init@main

      - name: Opentofu Plan
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/plan@main
        with:
          target_modules: ${{ env.target_module }}
          tfvars_file_path: "opentofu.tfvars"
          continue: ${{ github.event.inputs.continue }}
        if: ${{ github.event.inputs.Action == 'plan' }}
        

      - name: Opentofu Apply
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/apply@main
        with:
          target_modules:  ${{ env.TARGET_MODULE }}
          tfvars_file_path: "opentofu.tfvars"
          continue: ${{ inputs.continue }}
        if: ${{ github.event.inputs.Action == 'apply' }}
        

      - name: Opentofu Destroy
        uses: VFGroup-VBIT/vbitdc-opf-actions/opentofu/destroy@main
        with:
          target_modules:  ${{ env.TARGET_MODULE }}
          continue: ${{ inputs.continue }} 
        if: ${{ github.event.inputs.Action == 'destroy' }}

          